<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Today I Learnt - Data Engineering Diaries - Pandas</title><link href="/" rel="alternate"></link><link href="/feeds/pandas.atom.xml" rel="self"></link><id>/</id><updated>2020-02-05T18:06:00+08:00</updated><entry><title>Conditional Colors in Plotly Tables</title><link href="/conditional-colors-in-plotly-tables.html" rel="alternate"></link><published>2020-02-05T18:06:00+08:00</published><updated>2020-02-05T18:06:00+08:00</updated><author><name>Ong Chin Hwee</name></author><id>tag:None,2020-02-05:/conditional-colors-in-plotly-tables.html</id><summary type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Generate a data table in Plotly that has the following features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Alternating cell and line colors for odd/even rows&lt;/li&gt;
&lt;li&gt;Unique cell color on first column&lt;/li&gt;
&lt;li&gt;For third column onwards, color cells using two different colors based on two levels of upper-bound/lower-bound conditions&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;What I did&lt;/h2&gt;
&lt;h3&gt;Step 1 â€¦&lt;/h3&gt;</summary><content type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Generate a data table in Plotly that has the following features:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Alternating cell and line colors for odd/even rows&lt;/li&gt;
&lt;li&gt;Unique cell color on first column&lt;/li&gt;
&lt;li&gt;For third column onwards, color cells using two different colors based on two levels of upper-bound/lower-bound conditions&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;What I did&lt;/h2&gt;
&lt;h3&gt;Step 1: Define Pandas DataFrame to transform into Plotly Table&lt;/h3&gt;
&lt;p&gt;Let's go back to the table that was created in the previous note:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;

                           &lt;span class="n"&gt;value&lt;/span&gt;         &lt;span class="n"&gt;Total&lt;/span&gt;
&lt;span class="n"&gt;Buyer&lt;/span&gt;                      &lt;span class="n"&gt;BU1&lt;/span&gt;    &lt;span class="n"&gt;BU2&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="n"&gt;NaN&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;NaN&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;262&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;171&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The DataFrame has the following hierarchial indexing properties: 2 levels of column indices and 2 levels of row indices.&lt;/p&gt;
&lt;p&gt;For the column indices:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;

&lt;span class="n"&gt;MultiIndex&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
       &lt;span class="k"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the row indices:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;

&lt;span class="n"&gt;MultiIndex&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
           &lt;span class="k"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;variable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Create backend table for metric used in the conditions&lt;/h3&gt;
&lt;p&gt;For example, I would like to use a ratio of two variables as one of the metrics for the upper-bound/lower-bound conditions. As the ratio is not explicitly displayed on the data table, I create a backend table to store the ratios.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;pv_po_ratio_analysis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;po_count_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;
                    &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                        &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;
                                    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;total_pv_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total PV ($)&amp;#39;&lt;/span&gt;
                    &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                        &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;
                                    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pv_po_ratio_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_pv_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;po_count_df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pv_po_ratio_df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 3: Define conditions for conditional formatting of cell colors&lt;/h3&gt;
&lt;p&gt;For this example, I would like to color cells using two different colors based on two levels of conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PO Count &amp;gt;= T1&lt;/li&gt;
&lt;li&gt;PV/PO ratio &amp;lt; T2 (pink) or PV/PO ratio &amp;gt; T3 (yellow)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Criteria no. 1 on PO Count needs to be fulfilled before traversing down to criteria 2 on PV/PO ratio. To obtain the boolean DataFrames that represent whether the value in each cell fulfils the less-than or more-than conditions for the metrics (in this case, PO Count and PV/PO ratio), we first define the DataFrames that represent these metrics.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;DataFrame&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt; &lt;span class="n"&gt;PO&lt;/span&gt; &lt;span class="k"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PV&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;PV&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;PO&lt;/span&gt; &lt;span class="n"&gt;ratio&lt;/span&gt;

&lt;span class="n"&gt;po_count_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;
                                  &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pv_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total PV ($)&amp;#39;&lt;/span&gt;
                &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;
                                  &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Item&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;pv_po_ratio_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv_po_ratio_analysis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_table&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;column_level1_agg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the metric DataFrames are initialized, we make use of pandas-defined binary operator functions to apply boolean operations to the value in each cell.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nb"&gt;binary&lt;/span&gt; &lt;span class="n"&gt;operators&lt;/span&gt;

&lt;span class="n"&gt;is_po_count_gt_threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;po_count_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv_po_ratio_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pv_po_ratio_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 4: Transform Pandas MultiIndex DataFrame into Plotly-compatible format&lt;/h3&gt;
&lt;p&gt;Since we would like to color the Count and Total Amount cells for each Buyer-Vendor combination based on the conditions, we use the Index.repeat() function in pandas to repeat each Index associated with the Vendor for the boolean DataFrames and reindex the DataFrames with the repeated Indexes.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Repeat&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;
&lt;span class="n"&gt;is_po_count_gt_threshold_repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_po_count_gt_threshold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;reindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;is_po_count_gt_threshold&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1_repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;reindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2_repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;reindex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To transform the resulting boolean DataFrames into Plotly-compatible format, we need to understand how Plotly interprets and outputs table values.&lt;/p&gt;
&lt;p&gt;According to the &lt;a href="https://plot.ly/python/table/"&gt;documentation for Tables in Python with Plotly&lt;/a&gt;, the data are arranged in a grid of rows and columns and the grid is represented as a vector of column vectors (which is known as a column-major order). Due to limitations in displaying MultiIndex DataFrames in Table format with Plotly, the original MultiIndex DataFrame has to be manipulated in a way that allows Plotly to read the header and cell values in the DataFrame.&lt;/p&gt;
&lt;p&gt;When cell values for a Table object is defined in the following manner:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;go.Table(&lt;/span&gt;
&lt;span class="n"&gt;    header=dict(&lt;/span&gt;
&lt;span class="n"&gt;        values=[&amp;#39;A Scores&amp;#39;, &amp;#39;B Scores&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;[100, 90, 80, 90&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;95, 85, 75, 95&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the Table object would be displayed column-wise in the following manner:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="nv"&gt;Scores&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="nv"&gt;B&lt;/span&gt; &lt;span class="nv"&gt;Scores&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;100&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;95&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;90&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;85&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;80&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;75&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;90&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;95&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Column-major order also applies for header values, as illustrated by the example below:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;go.Table(&lt;/span&gt;
&lt;span class="n"&gt;    header=dict(&lt;/span&gt;
&lt;span class="n"&gt;        values=[[&amp;#39;Scores&amp;#39;, &amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;#39;Scores&amp;#39;,&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cells&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="n"&gt;[100, 90, 80, 90&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;95, 85, 75, 95&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Table object generated from the code snippet above would be displayed in the following manner:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="nv"&gt;Scores&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="nv"&gt;Scores&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;A&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;B&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;100&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;95&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;90&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;85&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;80&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;75&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;90&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;95&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To represent the row levels in the MultiIndex, the row levels in the DataFrame are defined as a list of lists having the same length as the number of row levels in the DataFrame.&lt;/p&gt;
&lt;p&gt;Understanding how the header and cell values are defined in column-major order in Tables with Plotly is important, as the same column-major order is also used in specifying the styling for header and individual cells.&lt;/p&gt;
&lt;p&gt;In the case of the boolean DataFrames generated from the earlier steps, list of values in DataFrames are typically read in row-major order i.e. &lt;strong&gt;df.loc[row_idx,column_idx] or df.iloc[row_num,column_num]&lt;/strong&gt;. Hence, we would have to transform the DataFrames so that the list of values from the DataFrames follow the column-major order that Plotly uses to read table values i.e. &lt;strong&gt;values=[df.column1, df.column2]&lt;/strong&gt;. Since column names for Buyer may vary, we transpose the DataFrames from row-major order to column-major order such that Plotly reads the values in column-major order.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Transpose&lt;/span&gt; &lt;span class="n"&gt;tables&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt; &lt;span class="n"&gt;follow&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="n"&gt;Plotly&lt;/span&gt; &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt;
&lt;span class="n"&gt;is_po_count_gt_threshold_repeat_T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_po_count_gt_threshold_repeat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1_repeat_T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_pv_po_ratio_lt_threshold1_repeat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2_repeat_T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;is_pv_po_ratio_gt_threshold2_repeat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 5: Define conditional coloring of table cells&lt;/h3&gt;
&lt;p&gt;Finally, we define the conditional coloring of table cells, with alternating colors for odd and even rows if the table cell does not fulfil the conditional coloring conditions. For readability, the 'Total' column has been excluded from the conditional coloring and is instead colored with alternating colors for odd and even rows.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cond_to_color_cells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;po_count_bool_array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;pv_po_ratio_high_bool_array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;pv_po_ratio_low_bool_array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rowEvenColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lavender&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rowOddColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rowPVPOratioUpperBoundColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hotpink&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;rowPVPOratioLowerBoundColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;None&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rowOddColor&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rowEvenColor&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;po_count_bool_array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;po_count_bool_array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pv_po_ratio_high_bool_array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rowPVPOratioUpperBoundColor&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;elif&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pv_po_ratio_low_bool_array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rowPVPOratioLowerBoundColor&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Pandas"></category></entry><entry><title>Dataframe manipulation sequence - GroupBy Agg, Melt, Unstack</title><link href="/dataframe-manipulation-sequence-groupby-agg-melt-unstack.html" rel="alternate"></link><published>2020-01-20T18:06:00+08:00</published><updated>2020-01-20T18:06:00+08:00</updated><author><name>Ong Chin Hwee</name></author><id>tag:None,2020-01-20:/dataframe-manipulation-sequence-groupby-agg-melt-unstack.html</id><summary type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;From a Pandas DataFrame, massage the DataFrame into a format where order Count and Total Amount could be determined for each Vendor and each Vendor-Buyer combination.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;      
    &lt;span class="s1"&gt;&amp;#39;Buyer â€¦&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;From a Pandas DataFrame, massage the DataFrame into a format where order Count and Total Amount could be determined for each Vendor and each Vendor-Buyer combination.&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;      
    &lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;Amount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;156&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;

   &lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;  &lt;span class="n"&gt;Amount&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;       &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;       &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;40&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;     &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;     &lt;span class="mi"&gt;234&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;       &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;     &lt;span class="mi"&gt;156&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;97&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What I did&lt;/h2&gt;
&lt;p&gt;First, compute the aggregate values (Count, Total Amount ($)) for Vendor-Buyer combinations by using &lt;strong&gt;GroupBy aggregation (groupby().agg())&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedAgg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Amount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedAgg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Amount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df&lt;/span&gt;

              &lt;span class="k"&gt;Count&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;        &lt;span class="mi"&gt;1&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;        &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;        &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;        &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="mi"&gt;103&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;        &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;30&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;        &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;        &lt;span class="mi"&gt;2&lt;/span&gt;               &lt;span class="mi"&gt;179&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;171&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reset index of DataFrame in order to sort the data by Buyer and Vendor using &lt;strong&gt;sort_values&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;agg_df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df_2&lt;/span&gt;

    &lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;  &lt;span class="k"&gt;Count&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;      &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;               &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;171&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df_3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;agg_df_2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;agg_df_3&lt;/span&gt;

    &lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;  &lt;span class="k"&gt;Count&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;               &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;      &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;                &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;               &lt;span class="mi"&gt;171&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;DataFrame.melt&lt;/strong&gt; "unpivots" a DataFrame into a format where one or more columns are identifier variables (id_vars), while all other columns, considered measured variables (value_vars), are "unpivoted" to the row axis. This leaves two non-identifier columns, 'variable' and 'value', where 'variable' contains the measured variables and 'value' contains the values corresponding to the measured variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_melt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;agg_df_3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;melt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;id_vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="n"&gt;value_vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Total Amount ($)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_melt&lt;/span&gt;

    &lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;          &lt;span class="k"&gt;variable&lt;/span&gt;  &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;       &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;       &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;       &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;       &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;       &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;       &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;             &lt;span class="k"&gt;Count&lt;/span&gt;      &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;       &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU1&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;      &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;      &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt;      &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;   &lt;span class="n"&gt;BU2&lt;/span&gt;  &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;171&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;DataFrame.unstack&lt;/strong&gt; "pivots" a level of the hierarchial index labels to the column axis and returns a reshaped DataFrame with a new level of column labels, whose inner-most level consists of the pivoted index labels. This implies that a DataFrame which does not have indexing on the row axis will be "pivoted" to a Series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_melt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;variable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;

                                &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;                 &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;171&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                             &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="n"&gt;Buyer&lt;/span&gt;                      &lt;span class="n"&gt;BU1&lt;/span&gt;    &lt;span class="n"&gt;BU2&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="n"&gt;NaN&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;NaN&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;262&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;171&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                 &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="k"&gt;variable&lt;/span&gt;     &lt;span class="k"&gt;Count&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="n"&gt;Buyer&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="mi"&gt;1&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;               &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;               &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;              &lt;span class="mi"&gt;103&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;              &lt;span class="mi"&gt;262&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="mi"&gt;30&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;               &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="n"&gt;BU1&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;              &lt;span class="mi"&gt;179&lt;/span&gt;
       &lt;span class="n"&gt;BU2&lt;/span&gt;       &lt;span class="mi"&gt;3&lt;/span&gt;              &lt;span class="mi"&gt;171&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                       &lt;span class="n"&gt;value&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt;                     &lt;span class="n"&gt;A&lt;/span&gt;     &lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="k"&gt;C&lt;/span&gt;     &lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="n"&gt;E&lt;/span&gt;
&lt;span class="n"&gt;Buyer&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt;
&lt;span class="n"&gt;BU1&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;              &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;NaN&lt;/span&gt;  &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;BU2&lt;/span&gt;   &lt;span class="k"&gt;Count&lt;/span&gt;              &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;262&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;171&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since I am interested in calculating the overall Count and Total Amount for each Vendor, I pivot the Buyer level to the column axis and retain the Vendor level in the row axis, and calculate the sum along the column axis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_unstack&lt;/span&gt;
                         &lt;span class="n"&gt;value&lt;/span&gt;         &lt;span class="n"&gt;Total&lt;/span&gt;
&lt;span class="n"&gt;Buyer&lt;/span&gt;                      &lt;span class="n"&gt;BU1&lt;/span&gt;    &lt;span class="n"&gt;BU2&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="n"&gt;NaN&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;NaN&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;262&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;E&lt;/span&gt;      &lt;span class="k"&gt;Count&lt;/span&gt;               &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
       &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="mi"&gt;179&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;171&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html"&gt;Group By: split-apply-combine - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html"&gt;MultiIndex / advanced indexing - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html"&gt;Reshaping and pivot tables - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html"&gt;pandas.DataFrame.sort_values - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.melt.html"&gt;pandas.DataFrame.melt - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.unstack.html"&gt;pandas.DataFrame.unstack - pandas 1.0.1 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Pandas"></category></entry><entry><title>MultiIndex.to_frame()</title><link href="/multiindexto_frame.html" rel="alternate"></link><published>2020-01-09T18:06:00+08:00</published><updated>2020-01-09T18:06:00+08:00</updated><author><name>Ong Chin Hwee</name></author><id>tag:None,2020-01-09:/multiindexto_frame.html</id><summary type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;From a MultiIndex dataframe, determine the total number of elements in the Buyer column for each Vendor.&lt;/p&gt;
&lt;h2&gt;What I did&lt;/h2&gt;
&lt;p&gt;Let's say we have the following DataFrame:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;Vendor&amp;#39;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s s-Atom"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;      
    &lt;span class="s s-Atom"&gt;&amp;#39;Buyer&amp;#39;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU3 â€¦&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;From a MultiIndex dataframe, determine the total number of elements in the Buyer column for each Vendor.&lt;/p&gt;
&lt;h2&gt;What I did&lt;/h2&gt;
&lt;p&gt;Let's say we have the following DataFrame:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;Vendor&amp;#39;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s s-Atom"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;      
    &lt;span class="s s-Atom"&gt;&amp;#39;Buyer&amp;#39;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;BU3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s s-Atom"&gt;&amp;#39;Amount&amp;#39;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;156&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="nv"&gt;Vendor&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;Buyer&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="nv"&gt;Amount&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;--:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;----------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;-------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;A&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU1&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;A&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU3&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;B&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU2&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;20&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;C&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU1&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;103&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;C&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU3&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;234&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;C&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU4&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;13&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;D&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU1&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;D&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU2&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;23&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;E&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU1&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;156&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;E&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU4&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;60&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;F&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU2&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;G&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU1&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;23&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="nv"&gt;G&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="nv"&gt;BU3&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;14&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First, apply GroupBy and Aggregate by Vendor and Buyer:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df_groupby_agg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;&amp;#39;Buyer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nf"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s s-Atom"&gt;total_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s s-Atom"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;NamedAgg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;column=&amp;#39;Amount&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;aggfunc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s s-Atom"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df_groupby_agg&lt;/span&gt;

&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;              &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;total_value&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;Vendor&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;Buyer&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;              &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;A&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;        &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;        &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;B&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;20&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;C&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;103&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;234&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU4&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;13&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;D&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;15&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;23&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;E&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;156&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU4&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;60&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-----------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="s s-Atom"&gt;------------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;F&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;97&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;G&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;23&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="mi"&gt;14&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, create a DataFrame with the levels of the MultiIndex as columns:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df_multiindex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s s-Atom"&gt;df_groupby_agg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s s-Atom"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s s-Atom"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s s-Atom"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s s-Atom"&gt;df_multiindex&lt;/span&gt;

&lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="nv"&gt;Vendor&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="nv"&gt;Buyer&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;--:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;--------:&lt;/span&gt;&lt;span class="p"&gt;|:-&lt;/span&gt;&lt;span class="s s-Atom"&gt;-------:&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;A&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;A&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;B&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;C&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;C&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;C&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU4&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;D&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;D&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;E&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;E&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU4&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;F&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU2&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;G&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;       &lt;span class="nv"&gt;G&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;    &lt;span class="nv"&gt;BU3&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly, use '.loc[]' and 'count()' to obtain Buyer count for each Vendor:&lt;/p&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Buyer&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;df_multiindex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Vendor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Pandas"></category></entry><entry><title>MultiIndex.set_levels() in pandas</title><link href="/multiindexset_levels-in-pandas.html" rel="alternate"></link><published>2020-01-04T10:20:00+08:00</published><updated>2020-01-04T10:20:00+08:00</updated><author><name>Ong Chin Hwee</name></author><id>tag:None,2020-01-04:/multiindexset_levels-in-pandas.html</id><summary type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;A user filed an issue on the pandas repo regarding MultiIndex.set_levels - and it turns out the user had some confusion between the set_levels method and the set_names method for MultiIndex due to the documentation. Hence, the MultiIndex.set_levels documentation was marked by the maintainers for improvements to clarify â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;A user filed an issue on the pandas repo regarding MultiIndex.set_levels - and it turns out the user had some confusion between the set_levels method and the set_names method for MultiIndex due to the documentation. Hence, the MultiIndex.set_levels documentation was marked by the maintainers for improvements to clarify that MultiIndex.set_levels() interprets passed values as new components of the .levels attribute.&lt;/p&gt;
&lt;h2&gt;What I did&lt;/h2&gt;
&lt;p&gt;As suggested by @jreback, I updated the docstring of MultiIndex.set_levels directly so that it would be reflected in the API reference. I made the following changes to the docstring:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Added an extra value to make the example clearer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From my discussion with Marc Garcia (@datapythonista), my intention of adding an extra value at one of the levels (same for the MultiIndex above) is to further highlight the differences in passing values to the two levels in the MultiIndex, for which the number of values in each level are not equal. Using different number of values in each level is to emphasize that set_levels() passes values to indexes on 'by level' basis (by changing the levels attribute), not on 'by row / integer code' basis.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added an additional example to clarify that MultiIndex.set_levels() interprets passed values as new components of the .levels attribute.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The intention of the following example is to illustrate that set_levels() passes values into the levels attribute that is represented by a FrozenList containing list of values for each level in the MultiIndex, even when the number of values passed for a level is more than the number of indexes available in the MultiIndex itself.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:::python&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_levels&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;MultiIndex&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
        &lt;span class="k"&gt;names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_levels&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="k"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="n"&gt;levels&lt;/span&gt;

&lt;span class="n"&gt;FrozenList&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added the clarification that MultiIndex.set_levels() interprets passed values as new components of the .levels attribute and stores the passed values even if any of the levels passed to set_levels() exceeds the existing length.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The following clarification was finalized in the docs after feedback from Will Ayd (@WillAyd) and G. Young (@gfyoung):
    "If any of the levels passed to set_levels() exceeds the existing length, all of the values from that argument will be stored in the MultiIndex levels, though the values will be truncated in the MultiIndex output."&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Updated docs: &lt;a href="https://dev.pandas.io/docs/reference/api/pandas.MultiIndex.set_levels.html"&gt;https://dev.pandas.io/docs/reference/api/pandas.MultiIndex.set_levels.html&lt;/a&gt;&lt;/p&gt;</content><category term="Pandas"></category></entry></feed>